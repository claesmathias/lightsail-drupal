version: '3.7'

services:

#
# letsencrypt
# This container sets up an Nginx webserver and reverse proxy with php support 
# and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. 
# It also contains fail2ban for intrusion prevention.
#
  letsencrypt:
    image: linuxserver/letsencrypt
    container_name: letsencrypt
    privileged: true
    restart: always
    cap_add:
      - NET_ADMIN
    environment:
      - PGID=1000
      - PUID=1000
      - EMAIL=${EMAIL}
      - URL=${URL}
      - SUBDOMAINS=${SUBDOMAINS}
      - EXTRA_DOMAINS=${EXTRA_DOMAINS}
      - DHLEVEL=2048
      - TZ=${TZ}
      - VALIDATION=http
    ports:
      - 80:80
      - 443:443
    volumes:
      - /home/centos/letsencrypt:/config
      - /home/centos/lightsail-drupal/nginx:/config/nginx/site-confs/default
    depends_on:
      - "no-ip"
      - "drupal"
    networks:
      - app_net
    healthcheck:
     test: ["CMD-SHELL", "curl -f --insecure https://localhost && echo 'OK'"]
     interval: 5s
     timeout: 2s
     retries: 20

#
# no-ip
# This is a simple Docker container for running the No-IP2 dynamic DNS update script. 
# It will keep your domain.ddns.net DNS alias up-to-date as your home IP changes.
#
  no-ip:
    image: coppit/no-ip
    container_name: noip
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
      - /home/centos/noip:/config
      - /home/centos/lightsail-drupal/noip.conf:/config/noip.conf
    environment:
      - PGID=1000 #optional
      - PUID=1000 #optional

#
# drupal
# Drupal is an open source content management platform powering millions of websites and applications.
#
  drupal:
    image: drupal:apache
    container_name: drupal
    restart: always
    ports:
      - 80
    volumes:
      - /var/www/html/modules
      - /var/www/html/profiles
      - /var/www/html/themes
      # this takes advantage of the feature in Docker that a new anonymous
      # volume (which is what we're creating here) will be initialized with the
      # existing content of the image at the same location
      - /var/www/html/sites
    depends_on:
      - "postgres"
    networks:
      - app_net
      - data_net
    healthcheck:
     test: ["CMD-SHELL", "curl -f http://localhost && echo 'OK'"]
     interval: 5s
     timeout: 2s
     retries: 20

#
# postgres
# The PostgreSQL object-relational database system provides reliability and data integrity.
#
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - data_net

#
# network
#
networks:
  data_net:
    driver: bridge
    ipam:
     driver: default
  app_net:
    driver: bridge
    ipam:
     driver: default
     config:
      - subnet: 172.20.0.0/16
